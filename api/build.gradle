plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group "net.portswigger.burp.extensions"

ext {
    sonatypeExternalUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
    sonatypeSnapshotsExternalUrl = "https://oss.sonatype.org/content/repositories/snapshots"
    ossrhRelease = project.hasProperty("signing.keyId")
}

repositories {
    mavenLocal()
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

dependencies {
    testImplementation(
            "org.junit.jupiter:junit-jupiter:${junit5Version}",
            "org.assertj:assertj-core:${assertJVersion}",
            "org.mockito:mockito-core:${mockitoVersion}"
    )
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    options.encoding = "UTF-8"
}

task copyJavaDoc(type: Copy) {
    group 'documentation'
    dependsOn javadocJar
    from "build/docs"
    into "../docs/"
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

jar {
    archiveBaseName.set("montoya-api")
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        if (ossrhRelease) {
            maven {
                name = "ossrh"
                url = sonatypeExternalUrl
                credentials {
                    username = ossrhUsername
                    password = ossrhPassword
                }
            }
        }
    }
}

signing {
    required { ossrhRelease }
    sign publishing.publications.mavenJava
}

final JAVADOC_FIX_SEARCH_STR = '\n\n' +
        'getURLPrefix = function(ui) {\n' +
        '    return \'\';\n' +
        '};\n'

tasks.withType(Javadoc) {
    doLast {
        // Append the fix to the file
        def searchScript = new File(destinationDir.getAbsolutePath() + '/search.js')
        searchScript.append JAVADOC_FIX_SEARCH_STR
    }
}



